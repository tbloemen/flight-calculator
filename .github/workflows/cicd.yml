on: [push, pull_request]

jobs:
  formatting:
    name: Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install black and isort
        run: |
          python -m pip install --upgrade pip
          pip install black isort

      - name: Run black
        run: black --check .

      - name: Run isort
        run: isort --check-only .
  build:
    name: Build executable
    runs-on: windows-latest

    needs: [formatting]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          pip install uv

      - name: Cache uv virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Sync dependencies with uv
        run: |
          uv sync --all-extras --dev

      - name: Install Playwright Chromium into venv
        run: |
          set PLAYWRIGHT_BROWSERS_PATH=.venv\Scripts\browsers
          uv run playwright install chromium --with-deps
        shell: cmd

      - name: Install Rust (cargo)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            C:\Users\runneradmin\.cargo\registry
            C:\Users\runneradmin\.cargo\git
            C:\Users\runneradmin\.cargo\bin
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Install typst
        run: cargo install --locked typst-cli

      - name: Add cargo bin to PATH
        run: echo "C:\Users\runneradmin\.cargo\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build with PyInstaller
        run: |
          uv run pyinstaller HLA-tool.spec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/**
  release:
    name: create release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
